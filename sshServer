#####################################################################
#               .__      _________                                  #
#   ______ _____|  |__  /   _____/ ______________  __ ___________   #
#  /  ___//  ___/  |  \ \_____  \_/ __ \_  __ \  \/ // __ \_  __ \  #
#  \___ \ \___ \|   Y  \/        \  ___/|  | \/\   /\  ___/|  | \/  #
# /____  >____  >___|  /_______  /\___  >__|    \_/  \___  >__|     #
#       \/     \/     \/        \/     \/                 \/        #
#                                                                   #
#####################################################################



# Requires paramiko: http://www.paramiko.org/
	# pip install paramiko

import socket
import paramiko
import threading
import sys

# using the key from the Paramiko demo files
# can be edited to pass specific key
host_key = paramiko.RSAKey(filename='test_rsa.key')

class Server (paramiko.ServerInterface):
	
	def _init_(self):
		self.event = threading.Event()
	
	def check_channel_request(self, kind, chanid):
		if kind == 'session':
			return paramiko.OPEN_SUCCEEDED
		return paramiko.OPEN_FAILED_ADMINISTRATIVELY_PROHIBITED

	def check_auth_password(self, username, password):
		if (username == '<username>') and (password == '<password>'):
			return paramiko.AUTH_SUCCESSFUL
		return paramiko.AUTH_FAILED
server = sys.argv[1]
ssh_port = int(sys.argv[2])

try:
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
	sock.bind((server, ssh_port))
	sock.listen(100)
	print '[+] Listening for connection ...'
	client, addr = sock.accept()
except Exception, e:
	print '[-] Listen failed: ' + str(e)
	sys.exit(1)
print '[+] Got a connection!'

try:
	pySession = paramiko.Transport(client)
	pySession.add_server_key(host_key)
	server = Server()

	try:
		pySession.start_server(server=server)
	except paramiko.SSHException, x:
		print '[-] SSH negotiation failed.'
	chan = pySession.accept(20)
	print '[+] Authenticated!'
	print chan.recv(1024)
	chan.send('Welcome to ssh session')
	
	while True:
		try:
			command= raw_input("Enter command: ").strip('\n')
			if command != 'exit':
			chan.send(command)
			print chan.recv(1024) + '\n'
		else:
			chan.send('exit')
			print 'exiting'
			pySession.close()
			raise Exception ('exit')
	
	except KeyboardInterrupt:
		pySession.close()

except Exception, e:
	print '[-] Caught exception: ' + str(e)
	try:
		pySession.close()
	except:
		pass
	sys.exit(1)
